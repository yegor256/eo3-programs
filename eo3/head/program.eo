# The MIT License (MIT)
#
# Copyright (c) 2022-2024 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias eo3.head.index-of-byte
+alias eo3.head.ring-buffer
+alias eo3.head.unrec
+alias eo3.head.truth
+package eo3.head
+version 0.0.0

# This is the entry point to the program. Here, we read data from the
# file in a loop, save them into a ring buffer, and then print
# lines from the buffer, until the total count of lines is reached.
[args] > program
  malloc.of > @
    0
    [m] >>
      open. > @
        QQ.fs.file "eo3/head/input.txt"
        "r"
        [f] >>
          unrec > @
            state
              f
              5
              ring-buffer.empty m
            [s] >>
              next s > @

  [file left buf] > state
    [b] > fwd
      state file left b > @
    [b] > cut
      state > @
        file
        left.minus 1
        b

  [s] > next
    seq > @
      *
        s.file.read 24 > p
        s.buf.with p > n
        index-of-byte n.content 0A- > idx
        if.
          idx.lt 0
          if.
            p.size.eq 0
            false
            truth
              s.fwd n
          seq
            *
              QQ.io.stdout
                n.content.slice
                  0
                  idx.plus 1
              truth
                s.cut
                  n.beheaded
                    idx.plus 1
