+home https://github.com/yegor256/eo3-programs
+package eo3.parsing-lines
+spdx SPDX-FileCopyrightText: Copyright (c) 2022-2025 Yegor Bugayenko
+spdx SPDX-License-Identifier: MIT
+version 0.0.0

# In a byte array, find the index of the first occurrence of a given needle,
# or return -1 if not found. The needle is either a single byte or
# a byte array. The byte array is the first argument, and the needle is the second.
[bytes needle] > index-of-byte
  if. > @
    bytes.size.eq 0
    -1
    if.
      eq.
        bytes.slice 0 1
        needle
      0
      if.
        next.as-number.lt 0
        next.as-number
        next.as-number.plus 1
  index-of-byte > next!
    bytes.slice 1 (bytes.size.minus 1)
    needle

  # Finds a single byte where it exists.
  [] +> finds-one-byte
    assert > @
      6
      index-of-byte
        "Hello, друг!".as-bytes
        " ".as-bytes

  # Finds a single byte where it exists, at the first position.
  [] +> finds-first-byte
    assert > @
      0
      index-of-byte
        "John Malkovich".as-bytes
        "J".as-bytes

  # Finds the second byte.
  [] +> finds-second-byte
    assert > @
      1
      index-of-byte
        "John Malkovich".as-bytes
        "o".as-bytes

  # Returns negative when byte not found.
  [] +> doesnt-find-anything
    lt. > @
      index-of-byte
        "John Malkovich".as-bytes
        "\n".as-bytes
      0

  # Returns negative when byte array is empty.
  [] +> doesnt-find-anything-in-empty-bytes
    lt. > @
      index-of-byte
        --
        42-
      0
