+alias eo3.parsing-lines.index-of-byte
+alias eo3.parsing-lines.log
+alias eo3.parsing-lines.magenta
+alias eo3.parsing-lines.tabular
+home https://github.com/yegor256/eo3-programs
+package eo3.parsing-lines
+spdx SPDX-FileCopyrightText: Copyright (c) 2022-2025 Yegor Bugayenko
+spdx SPDX-License-Identifier: MIT
+version 0.0.0

# Prints the next available line from the `ring` and remove it
# from there by beheading the buffer. Returns a new buffer,
# without the line just
# printed and removed. If there is no such line available for
# printing, the same `ring` is returned.
[ring] > printed
  as-number. > tail
    index-of-byte > tail-as-bytes!
      ring.content
      0A-
  if. > @
    tail.lt 0
    ring
    seq
      *
        log
          "line: \"%s\""
          *
            ring.content.slice
              0
              tail
          true
        QQ.io.stdout
          magenta
            QQ.txt.sprintf
              "%s\n"
              *
                tabular
                  string
                    ring.content.slice
                      0
                      tail
                  * 20 24 5
        beheaded.
          ring
          tail.plus 1

  # Prints a single line from the buffer.
  assert +> prints-single-line
    "world!"
    malloc.of
      0
      [m] >>
        printed > @
          with.
            ring-buffer.empty m
            "hello\nworld!"
